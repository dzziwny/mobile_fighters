# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Core
      - name: Build core
        working-directory: ./core
        run: |
          dart pub get
          dart run build_runner build --delete-conflicting-outputs
          
      # Server
      - name: Build server
        working-directory: ./server
        run: |
          dart pub get
          dart run build_runner build --delete-conflicting-outputs
          
      # App
      - name: Build web
        working-directory: ./app
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter build web --release

      # Analyze with dart
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      - name: Analyze project source
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      # - name: Run tests
      #   run: dart test
      
      # want to change this to 'flutter test'.
      # - name: Compile server
      #   run: dart compile aot-snapshot server/bin/main.dart --output mobile_fighters_api.aot

      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v4.1.0
      #   with:
      #     name: mobile_fighters_api.aot
      #     path: mobile_fighters_api.aot
      #     if-no-files-found: error
      #     retention-days: 1
      #     compression-level: 0
      
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag mobilefighters:$(date +%s)
          
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MOBILE_FIGHTERS }}'
          channelId: live
          projectId: mobile-fighters
          
